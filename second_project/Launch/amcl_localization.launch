
<launch>

  
    <!-- run tf transform -->
    <node pkg="tf" type="static_transform_publisher" name="robot_transform2" args="0 0 0 0 0 0 1 map odom 100"/>
    <node pkg="tf" type="static_transform_publisher" name="robot_transform" args="-0.675 -0.008 +0.96 0 0 0 1 base_link os1_sensor 100"/> 

    <!-- run imu node to have a better map -->
    <node pkg="imu_filter_madgwick" type="imu_filter_node"  name="imu_filter_madgwick_node" output="screen">  
        <remap from="/imu/data_raw" to="/mavros/imu/data_raw" />
        <remap from="imu/data" to="imu_data" />
        <param name="use_mag" value="false"/>
        <param name="publish_tf" value="false"/>
        <param name="use_magnetic_field_msg" value="false"/>
        <param name="zeta" value="0.00"/>
        <param name="gain" value="0.02"/>  
    </node>

    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf_node" output = "screen">   
      <remap from="vo" to="camera/odom/sample" />   
      <param name="output_frame" value="odom"/>
      <param name="freq" value="30.0"/>
      <param name="sensor_timeout" value="1.0"/>
      <param name="base_footprint_frame" value="base_link"/>
      <param name="odom_used" value="true"/>
      <param name="imu_used" value="true"/>
      <param name="vo_used" value="true"/>
      <param name="debug" value="false"/>
      <param name="self_diagnose" value="false"/>
    </node>

    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="/os1_cloud_node/points"/>
        <rosparam>
            transform_tolerance: 0.01
            scan_time: 0.001
            range_min: 0.2
            range_max: 10.0
            use_inf: true
            concurrency_level: 0
        </rosparam>
    </node>


  <arg name="base"       default="kobuki"/>  <!-- create_circles_asus_xtion_pro create_circles_kinect kobuki_hexagons_astra kobuki_hexagons_asus_xtion_pro kobuki_hexagons_asus_xtion_pro 
kobuki_hexagons_kinect kobuki_hexagons_r200 roomba_circles_asus_xtion_pro roomba_circles_kinect -->
  <arg name="stacks"     default="hexagons"/>  
  <arg name="3d_sensor"  default="astra"/>  

  <!-- Name of the map to use and initial position -->                                                            
  <arg name="map_file"       default="$(find second_project)/Maps/map8.yaml"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <arg name="odom_frame_id"   default="odom"/>
  <arg name="global_frame_id" default="map"/>

  <param name="/use_sim_time" value="true"/>

  <!--  ***************** Robot Model *****************  -->                                
  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  <!--  ****** Maps *****  -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">               
    <param name="frame_id" value="map"/>
  </node>


  <!--  ****** amcl *****  -->                                                                     
  <include file="$(find second_project)/Launch/amcl.launch.xml">
    <arg name="scan_topic" value="scan"/>
    <arg name="use_map_topic" value="true"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>


  <!--  **************** Visualisation ****************  -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find second_project)/rviz/robot_navigation.rviz"/>
</launch>
